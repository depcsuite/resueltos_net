{
  "stats": {
    "suites": 2,
    "tests": 16,
    "passes": 6,
    "pending": 0,
    "failures": 10,
    "start": "2023-04-12T00:20:53.718Z",
    "end": "2023-04-12T00:20:53.760Z",
    "duration": 42,
    "testsRegistered": 16,
    "passPercent": 37.5,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "d86f595f-1049-4bfe-a8aa-2bfb68815d9c",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f8990c6a-5741-4277-a01e-e6bed6501600",
          "title": "Operaciones con arrays",
          "fullFile": "C:\\Users\\sergi\\fuentes\\resueltos_net\\8-JavaScript\\Testing\\Ejemplo1\\test\\test.array.js",
          "file": "\\Testing\\Ejemplo1\\test\\test.array.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "sumar elementos",
              "fullTitle": "Operaciones con arrays sumar elementos",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "equal(sumar(arr), 13);",
              "err": {},
              "uuid": "af33a212-17b0-4c49-aab9-0b54f3206591",
              "parentUUID": "f8990c6a-5741-4277-a01e-e6bed6501600",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sumar elementos de indice par",
              "fullTitle": "Operaciones con arrays sumar elementos de indice par",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "equal(sumar_indice_pares(arr), 1);",
              "err": {},
              "uuid": "4dc3f384-660e-44fc-9c16-768ca03c4780",
              "parentUUID": "f8990c6a-5741-4277-a01e-e6bed6501600",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "agregar elementos al array",
              "fullTitle": "Operaciones con arrays agregar elementos al array",
              "timedOut": false,
              "duration": 3,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "equal(agregar(arr,33), [1, 4, 5, -2, 6, 10, -11,33]);",
              "err": {
                "message": "AssertionError: undefined == [\n  1,\n  4,\n  5,\n  -2,\n  6,\n  10,\n  -11,\n  33\n]",
                "estack": "AssertionError [ERR_ASSERTION]: undefined == [\n  1,\n  4,\n  5,\n  -2,\n  6,\n  10,\n  -11,\n  33\n]\n    at Context.<anonymous> (file:///C:/Users/sergi/fuentes/resueltos_net/8-JavaScript/Testing/Ejemplo1/test/test.array.js:37:5)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": null
              },
              "uuid": "a6776020-975f-4e07-9743-dcc2bb244fa4",
              "parentUUID": "f8990c6a-5741-4277-a01e-e6bed6501600",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Da vuelta los elementos al array",
              "fullTitle": "Operaciones con arrays Da vuelta los elementos al array",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "equal(alrevez(arr), [-11,10,6,-2,5,4,1]);",
              "err": {
                "message": "AssertionError: undefined == [\n  -11,\n  10,\n  6,\n  -2,\n  5,\n  4,\n  1\n]",
                "estack": "AssertionError [ERR_ASSERTION]: undefined == [\n  -11,\n  10,\n  6,\n  -2,\n  5,\n  4,\n  1\n]\n    at Context.<anonymous> (file:///C:/Users/sergi/fuentes/resueltos_net/8-JavaScript/Testing/Ejemplo1/test/test.array.js:40:5)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": null
              },
              "uuid": "dd34cdf4-975d-471c-a74c-59472483d59a",
              "parentUUID": "f8990c6a-5741-4277-a01e-e6bed6501600",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "buscar un elemento -> devuelve el index de la primera ocurrencia",
              "fullTitle": "Operaciones con arrays buscar un elemento -> devuelve el index de la primera ocurrencia",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "equal(buscar(arr,10), 5);",
              "err": {
                "message": "AssertionError: undefined == 5",
                "estack": "AssertionError [ERR_ASSERTION]: undefined == 5\n    at Context.<anonymous> (file:///C:/Users/sergi/fuentes/resueltos_net/8-JavaScript/Testing/Ejemplo1/test/test.array.js:44:5)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": null
              },
              "uuid": "901abee7-fa71-43e7-8bf5-6f23879d9499",
              "parentUUID": "f8990c6a-5741-4277-a01e-e6bed6501600",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "buscar un elemento -> devuelve -1 si no lo encuentra",
              "fullTitle": "Operaciones con arrays buscar un elemento -> devuelve -1 si no lo encuentra",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "equal(buscar(arr,22), -1);",
              "err": {
                "message": "AssertionError: undefined == -1",
                "estack": "AssertionError [ERR_ASSERTION]: undefined == -1\n    at Context.<anonymous> (file:///C:/Users/sergi/fuentes/resueltos_net/8-JavaScript/Testing/Ejemplo1/test/test.array.js:48:5)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": null
              },
              "uuid": "c252bb5f-05a3-47b3-a071-5d8ddd60749f",
              "parentUUID": "f8990c6a-5741-4277-a01e-e6bed6501600",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "combinar dos arreglos",
              "fullTitle": "Operaciones con arrays combinar dos arreglos",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let arr1 = [11,22,33,44,55,66]\nequal(combinar(arr,arr1), [1, 4, 5, -2, 6, 10, -11,11,22,33,44,55,66]);",
              "err": {
                "message": "AssertionError: undefined == [\n  1,\n  4,\n  5,\n  -2,\n  6,\n  10,\n  -11,\n  11,\n  22,\n  33,\n  44,\n  55,\n  66\n]",
                "estack": "AssertionError [ERR_ASSERTION]: undefined == [\n  1,\n  4,\n  5,\n  -2,\n  6,\n  10,\n  -11,\n  11,\n  22,\n  33,\n  44,\n  55,\n  66\n]\n    at Context.<anonymous> (file:///C:/Users/sergi/fuentes/resueltos_net/8-JavaScript/Testing/Ejemplo1/test/test.array.js:52:4)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": null
              },
              "uuid": "d8be07f5-ddaf-49ca-bc8b-670969b9884a",
              "parentUUID": "f8990c6a-5741-4277-a01e-e6bed6501600",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "extraer primer elemento del array",
              "fullTitle": "Operaciones con arrays extraer primer elemento del array",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "equal(extraer(arr), 1);",
              "err": {
                "message": "AssertionError: undefined == 1",
                "estack": "AssertionError [ERR_ASSERTION]: undefined == 1\n    at Context.<anonymous> (file:///C:/Users/sergi/fuentes/resueltos_net/8-JavaScript/Testing/Ejemplo1/test/test.array.js:55:3)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": null
              },
              "uuid": "dce45fb1-a1c0-4ba2-9948-31094b78f24e",
              "parentUUID": "f8990c6a-5741-4277-a01e-e6bed6501600",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "extrae primer elemento del array y devuelve el resto",
              "fullTitle": "Operaciones con arrays extrae primer elemento del array y devuelve el resto",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "equal(extraer_resto(arr), [4, 5, -2, 6, 10, -11]);",
              "err": {
                "message": "AssertionError: undefined == [\n  4,\n  5,\n  -2,\n  6,\n  10,\n  -11\n]",
                "estack": "AssertionError [ERR_ASSERTION]: undefined == [\n  4,\n  5,\n  -2,\n  6,\n  10,\n  -11\n]\n    at Context.<anonymous> (file:///C:/Users/sergi/fuentes/resueltos_net/8-JavaScript/Testing/Ejemplo1/test/test.array.js:58:5)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": null
              },
              "uuid": "53d28a54-82cf-4c3f-8dae-e66f6a16e793",
              "parentUUID": "f8990c6a-5741-4277-a01e-e6bed6501600",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "duplicar cada elemento del array (foreEach)",
              "fullTitle": "Operaciones con arrays duplicar cada elemento del array (foreEach)",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "equal(duplicar(arr), [4, 5, -2, 6, 10, -11]);",
              "err": {
                "message": "AssertionError: undefined == [\n  4,\n  5,\n  -2,\n  6,\n  10,\n  -11\n]",
                "estack": "AssertionError [ERR_ASSERTION]: undefined == [\n  4,\n  5,\n  -2,\n  6,\n  10,\n  -11\n]\n    at Context.<anonymous> (file:///C:/Users/sergi/fuentes/resueltos_net/8-JavaScript/Testing/Ejemplo1/test/test.array.js:61:3)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": null
              },
              "uuid": "1dd4f2cc-9f6a-44b5-b8b4-6794fec2ce4b",
              "parentUUID": "f8990c6a-5741-4277-a01e-e6bed6501600",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "duplicar2 cada elemento del array (map)",
              "fullTitle": "Operaciones con arrays duplicar2 cada elemento del array (map)",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "equal(duplicar2(arr), [4, 5, -2, 6, 10, -11]);",
              "err": {
                "message": "AssertionError: undefined == [\n  4,\n  5,\n  -2,\n  6,\n  10,\n  -11\n]",
                "estack": "AssertionError [ERR_ASSERTION]: undefined == [\n  4,\n  5,\n  -2,\n  6,\n  10,\n  -11\n]\n    at Context.<anonymous> (file:///C:/Users/sergi/fuentes/resueltos_net/8-JavaScript/Testing/Ejemplo1/test/test.array.js:64:3)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": null
              },
              "uuid": "9cf8bf83-b1a5-4eb2-835e-8b8e3228b051",
              "parentUUID": "f8990c6a-5741-4277-a01e-e6bed6501600",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "af33a212-17b0-4c49-aab9-0b54f3206591",
            "4dc3f384-660e-44fc-9c16-768ca03c4780"
          ],
          "failures": [
            "a6776020-975f-4e07-9743-dcc2bb244fa4",
            "dd34cdf4-975d-471c-a74c-59472483d59a",
            "901abee7-fa71-43e7-8bf5-6f23879d9499",
            "c252bb5f-05a3-47b3-a071-5d8ddd60749f",
            "d8be07f5-ddaf-49ca-bc8b-670969b9884a",
            "dce45fb1-a1c0-4ba2-9948-31094b78f24e",
            "53d28a54-82cf-4c3f-8dae-e66f6a16e793",
            "1dd4f2cc-9f6a-44b5-b8b4-6794fec2ce4b",
            "9cf8bf83-b1a5-4eb2-835e-8b8e3228b051"
          ],
          "pending": [],
          "skipped": [],
          "duration": 7,
          "root": false,
          "rootEmpty": false,
          "_timeout": 6000
        },
        {
          "uuid": "4f43a72b-c1ae-4a19-845d-16f23ad11429",
          "title": "Operaciones básicas",
          "fullFile": "C:\\Users\\sergi\\fuentes\\resueltos_net\\8-JavaScript\\Testing\\Ejemplo1\\test\\test.operaciones.js",
          "file": "\\Testing\\Ejemplo1\\test\\test.operaciones.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "suma dos números",
              "fullTitle": "Operaciones básicas suma dos números",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "equal(sumar(2, 3), 5);",
              "err": {},
              "uuid": "f3a0bbb3-09b8-479a-b042-8157fb0b50ec",
              "parentUUID": "4f43a72b-c1ae-4a19-845d-16f23ad11429",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "multiplica dos números",
              "fullTitle": "Operaciones básicas multiplica dos números",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "equal(multiplicar(2, 3), 6);",
              "err": {},
              "uuid": "a3ae156c-c2c4-4e2d-9cfd-a1d080428e65",
              "parentUUID": "4f43a72b-c1ae-4a19-845d-16f23ad11429",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "divide dos números",
              "fullTitle": "Operaciones básicas divide dos números",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "equal(dividir(2, 3), 1.5);",
              "err": {},
              "uuid": "a892be1a-ef49-4a21-ae74-f54ff9785415",
              "parentUUID": "4f43a72b-c1ae-4a19-845d-16f23ad11429",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "modulo de dos números coprimos",
              "fullTitle": "Operaciones básicas modulo de dos números coprimos",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "equal(modulo(2, 3), 1);",
              "err": {},
              "uuid": "b513aab7-0d5c-4ca5-b945-5fba1611678b",
              "parentUUID": "4f43a72b-c1ae-4a19-845d-16f23ad11429",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "modulo de dos números multiplos",
              "fullTitle": "Operaciones básicas modulo de dos números multiplos",
              "timedOut": false,
              "duration": 0,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "equal(modulo(12, 3), 0);",
              "err": {
                "message": "AssertionError: 0",
                "estack": "AssertionError [ERR_ASSERTION]: 0\n    at Context.<anonymous> (file:///C:/Users/sergi/fuentes/resueltos_net/8-JavaScript/Testing/Ejemplo1/test/test.operaciones.js:19:5)\n    at process.processImmediate (node:internal/timers:471:21)",
                "diff": null
              },
              "uuid": "8c83a335-6928-4ee9-975a-50084204164d",
              "parentUUID": "4f43a72b-c1ae-4a19-845d-16f23ad11429",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "f3a0bbb3-09b8-479a-b042-8157fb0b50ec",
            "a3ae156c-c2c4-4e2d-9cfd-a1d080428e65",
            "a892be1a-ef49-4a21-ae74-f54ff9785415",
            "b513aab7-0d5c-4ca5-b945-5fba1611678b"
          ],
          "failures": [
            "8c83a335-6928-4ee9-975a-50084204164d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 6000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 6000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}