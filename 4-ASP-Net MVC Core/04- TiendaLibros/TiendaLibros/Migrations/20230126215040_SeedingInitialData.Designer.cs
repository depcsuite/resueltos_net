// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TiendaLibros.Data;

#nullable disable

namespace TiendaLibros.Migrations
{
    [DbContext(typeof(LibrosDBContext))]
    [Migration("20230126215040_SeedingInitialData")]
    partial class SeedingInitialData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("TiendaLibros.Entidades.Libro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Autor")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("0")
                        .HasColumnName("Autor");

                    b.Property<int>("DetallesId")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("")
                        .HasColumnName("ISBN");

                    b.Property<string>("PortadaUri")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("")
                        .HasColumnName("PortadaUri");

                    b.Property<decimal>("Precio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("decimal(18,2)")
                        .HasDefaultValue(0m)
                        .HasColumnName("Precio");

                    b.Property<int?>("Ranking")
                        .HasColumnType("int");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasDefaultValue("")
                        .HasColumnName("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("DetallesId");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            Id = -1,
                            Autor = "Garcia Marquez",
                            DetallesId = 1,
                            ISBN = "100",
                            PortadaUri = "100.png",
                            Precio = 2300m,
                            Ranking = 9,
                            Titulo = "100 años de Soledad"
                        },
                        new
                        {
                            Id = -2,
                            Autor = "Kafka",
                            DetallesId = 2,
                            ISBN = "101",
                            PortadaUri = "101.png",
                            Precio = 3300m,
                            Ranking = 9,
                            Titulo = "La metaforfosis"
                        },
                        new
                        {
                            Id = -3,
                            Autor = "Mario Quintero",
                            DetallesId = 3,
                            ISBN = "102",
                            PortadaUri = "102.png",
                            Precio = 2800m,
                            Ranking = 3,
                            Titulo = "Como ganar tu primer Millon"
                        },
                        new
                        {
                            Id = -4,
                            Autor = "Garcia Belsunse ",
                            DetallesId = 4,
                            ISBN = "103",
                            PortadaUri = "103.png",
                            Precio = 5300m,
                            Ranking = 8,
                            Titulo = "La guerra de la triple alianza"
                        },
                        new
                        {
                            Id = -5,
                            Autor = "Ludovica Skuir",
                            DetallesId = 5,
                            ISBN = "104",
                            PortadaUri = "104.png",
                            Precio = 1000m,
                            Ranking = 2,
                            Titulo = "Predicciones 2023"
                        });
                });

            modelBuilder.Entity("TiendaLibros.Entidades.LibroDetalle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(50)
                        .HasColumnType("int")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Edicion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Edicion");

                    b.Property<string>("Editorial")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(max)")
                        .HasDefaultValue("")
                        .HasColumnName("Editorial");

                    b.Property<DateTime>("FechaPublicacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValue(new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified))
                        .HasColumnName("FechaPublicacion");

                    b.Property<int>("Formato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0)
                        .HasColumnName("Formato");

                    b.Property<int>("Genero")
                        .HasMaxLength(20)
                        .HasColumnType("int")
                        .HasColumnName("Genero");

                    b.Property<string>("Resumen")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasDefaultValue("")
                        .HasColumnName("Resumen");

                    b.Property<string>("ResumenLink")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasDefaultValue("")
                        .HasColumnName("ResumenLink");

                    b.HasKey("Id");

                    b.ToTable("LibroDetalles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Edicion = 0,
                            FechaPublicacion = new DateTime(1990, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Formato = 0,
                            Genero = 0,
                            Resumen = "Es de huido abeja lentejas de la pero carcajadas me hule luna comida se para la pero llenando"
                        },
                        new
                        {
                            Id = 2,
                            Edicion = 0,
                            FechaPublicacion = new DateTime(1900, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Formato = 0,
                            Genero = 0,
                            Resumen = "Menedékünk ölel kicifrázva ríjjátok rázza gyalázat míg ríjjátok égjen nem és meg mint de bukjatok "
                        },
                        new
                        {
                            Id = 3,
                            Edicion = 0,
                            FechaPublicacion = new DateTime(2020, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Formato = 0,
                            Genero = 0,
                            Resumen = "Éclairs fileur sillage d'europe plein qu'on la montait fleurs atroce est-ce bleu courais"
                        },
                        new
                        {
                            Id = 4,
                            Edicion = 0,
                            FechaPublicacion = new DateTime(1985, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Formato = 0,
                            Genero = 0,
                            Resumen = "Clita magna rebum euismod aliquam eos aliquip ea nostrud kasd duis justo labore ea dolore "
                        },
                        new
                        {
                            Id = 5,
                            Edicion = 0,
                            FechaPublicacion = new DateTime(2022, 10, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Formato = 0,
                            Genero = 0,
                            Resumen = "Neu es schöne faßt dunst einst froher trüben mein klage tränen zu zu die und folgenden der "
                        });
                });

            modelBuilder.Entity("TiendaLibros.Entidades.Libro", b =>
                {
                    b.HasOne("TiendaLibros.Entidades.LibroDetalle", "Detalles")
                        .WithMany()
                        .HasForeignKey("DetallesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Detalles");
                });
#pragma warning restore 612, 618
        }
    }
}
